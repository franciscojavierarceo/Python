# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from feast.protos.feast.core import DataSource_pb2 as feast_dot_core_dot_DataSource__pb2
from feast.protos.feast.core import Entity_pb2 as feast_dot_core_dot_Entity__pb2
from feast.protos.feast.core import FeatureService_pb2 as feast_dot_core_dot_FeatureService__pb2
from feast.protos.feast.core import FeatureView_pb2 as feast_dot_core_dot_FeatureView__pb2
from feast.protos.feast.core import InfraObject_pb2 as feast_dot_core_dot_InfraObject__pb2
from feast.protos.feast.core import OnDemandFeatureView_pb2 as feast_dot_core_dot_OnDemandFeatureView__pb2
from feast.protos.feast.core import Registry_pb2 as feast_dot_core_dot_Registry__pb2
from feast.protos.feast.core import SavedDataset_pb2 as feast_dot_core_dot_SavedDataset__pb2
from feast.protos.feast.core import StreamFeatureView_pb2 as feast_dot_core_dot_StreamFeatureView__pb2
from feast.protos.feast.core import ValidationProfile_pb2 as feast_dot_core_dot_ValidationProfile__pb2
from feast.protos.feast.registry import RegistryServer_pb2 as feast_dot_registry_dot_RegistryServer__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2

GRPC_GENERATED_VERSION = '1.64.0'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in feast/registry/RegistryServer_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class RegistryServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetEntity = channel.unary_unary(
                '/feast.registry.RegistryServer/GetEntity',
                request_serializer=feast_dot_registry_dot_RegistryServer__pb2.GetEntityRequest.SerializeToString,
                response_deserializer=feast_dot_core_dot_Entity__pb2.Entity.FromString,
                _registered_method=True)
        self.ListEntities = channel.unary_unary(
                '/feast.registry.RegistryServer/ListEntities',
                request_serializer=feast_dot_registry_dot_RegistryServer__pb2.ListEntitiesRequest.SerializeToString,
                response_deserializer=feast_dot_registry_dot_RegistryServer__pb2.ListEntitiesResponse.FromString,
                _registered_method=True)
        self.GetDataSource = channel.unary_unary(
                '/feast.registry.RegistryServer/GetDataSource',
                request_serializer=feast_dot_registry_dot_RegistryServer__pb2.GetDataSourceRequest.SerializeToString,
                response_deserializer=feast_dot_core_dot_DataSource__pb2.DataSource.FromString,
                _registered_method=True)
        self.ListDataSources = channel.unary_unary(
                '/feast.registry.RegistryServer/ListDataSources',
                request_serializer=feast_dot_registry_dot_RegistryServer__pb2.ListDataSourcesRequest.SerializeToString,
                response_deserializer=feast_dot_registry_dot_RegistryServer__pb2.ListDataSourcesResponse.FromString,
                _registered_method=True)
        self.GetFeatureView = channel.unary_unary(
                '/feast.registry.RegistryServer/GetFeatureView',
                request_serializer=feast_dot_registry_dot_RegistryServer__pb2.GetFeatureViewRequest.SerializeToString,
                response_deserializer=feast_dot_core_dot_FeatureView__pb2.FeatureView.FromString,
                _registered_method=True)
        self.ListFeatureViews = channel.unary_unary(
                '/feast.registry.RegistryServer/ListFeatureViews',
                request_serializer=feast_dot_registry_dot_RegistryServer__pb2.ListFeatureViewsRequest.SerializeToString,
                response_deserializer=feast_dot_registry_dot_RegistryServer__pb2.ListFeatureViewsResponse.FromString,
                _registered_method=True)
        self.GetStreamFeatureView = channel.unary_unary(
                '/feast.registry.RegistryServer/GetStreamFeatureView',
                request_serializer=feast_dot_registry_dot_RegistryServer__pb2.GetStreamFeatureViewRequest.SerializeToString,
                response_deserializer=feast_dot_core_dot_StreamFeatureView__pb2.StreamFeatureView.FromString,
                _registered_method=True)
        self.ListStreamFeatureViews = channel.unary_unary(
                '/feast.registry.RegistryServer/ListStreamFeatureViews',
                request_serializer=feast_dot_registry_dot_RegistryServer__pb2.ListStreamFeatureViewsRequest.SerializeToString,
                response_deserializer=feast_dot_registry_dot_RegistryServer__pb2.ListStreamFeatureViewsResponse.FromString,
                _registered_method=True)
        self.GetOnDemandFeatureView = channel.unary_unary(
                '/feast.registry.RegistryServer/GetOnDemandFeatureView',
                request_serializer=feast_dot_registry_dot_RegistryServer__pb2.GetOnDemandFeatureViewRequest.SerializeToString,
                response_deserializer=feast_dot_core_dot_OnDemandFeatureView__pb2.OnDemandFeatureView.FromString,
                _registered_method=True)
        self.ListOnDemandFeatureViews = channel.unary_unary(
                '/feast.registry.RegistryServer/ListOnDemandFeatureViews',
                request_serializer=feast_dot_registry_dot_RegistryServer__pb2.ListOnDemandFeatureViewsRequest.SerializeToString,
                response_deserializer=feast_dot_registry_dot_RegistryServer__pb2.ListOnDemandFeatureViewsResponse.FromString,
                _registered_method=True)
        self.GetFeatureService = channel.unary_unary(
                '/feast.registry.RegistryServer/GetFeatureService',
                request_serializer=feast_dot_registry_dot_RegistryServer__pb2.GetFeatureServiceRequest.SerializeToString,
                response_deserializer=feast_dot_core_dot_FeatureService__pb2.FeatureService.FromString,
                _registered_method=True)
        self.ListFeatureServices = channel.unary_unary(
                '/feast.registry.RegistryServer/ListFeatureServices',
                request_serializer=feast_dot_registry_dot_RegistryServer__pb2.ListFeatureServicesRequest.SerializeToString,
                response_deserializer=feast_dot_registry_dot_RegistryServer__pb2.ListFeatureServicesResponse.FromString,
                _registered_method=True)
        self.GetSavedDataset = channel.unary_unary(
                '/feast.registry.RegistryServer/GetSavedDataset',
                request_serializer=feast_dot_registry_dot_RegistryServer__pb2.GetSavedDatasetRequest.SerializeToString,
                response_deserializer=feast_dot_core_dot_SavedDataset__pb2.SavedDataset.FromString,
                _registered_method=True)
        self.ListSavedDatasets = channel.unary_unary(
                '/feast.registry.RegistryServer/ListSavedDatasets',
                request_serializer=feast_dot_registry_dot_RegistryServer__pb2.ListSavedDatasetsRequest.SerializeToString,
                response_deserializer=feast_dot_registry_dot_RegistryServer__pb2.ListSavedDatasetsResponse.FromString,
                _registered_method=True)
        self.GetValidationReference = channel.unary_unary(
                '/feast.registry.RegistryServer/GetValidationReference',
                request_serializer=feast_dot_registry_dot_RegistryServer__pb2.GetValidationReferenceRequest.SerializeToString,
                response_deserializer=feast_dot_core_dot_ValidationProfile__pb2.ValidationReference.FromString,
                _registered_method=True)
        self.ListValidationReferences = channel.unary_unary(
                '/feast.registry.RegistryServer/ListValidationReferences',
                request_serializer=feast_dot_registry_dot_RegistryServer__pb2.ListValidationReferencesRequest.SerializeToString,
                response_deserializer=feast_dot_registry_dot_RegistryServer__pb2.ListValidationReferencesResponse.FromString,
                _registered_method=True)
        self.ListProjectMetadata = channel.unary_unary(
                '/feast.registry.RegistryServer/ListProjectMetadata',
                request_serializer=feast_dot_registry_dot_RegistryServer__pb2.ListProjectMetadataRequest.SerializeToString,
                response_deserializer=feast_dot_registry_dot_RegistryServer__pb2.ListProjectMetadataResponse.FromString,
                _registered_method=True)
        self.GetInfra = channel.unary_unary(
                '/feast.registry.RegistryServer/GetInfra',
                request_serializer=feast_dot_registry_dot_RegistryServer__pb2.GetInfraRequest.SerializeToString,
                response_deserializer=feast_dot_core_dot_InfraObject__pb2.Infra.FromString,
                _registered_method=True)
        self.Refresh = channel.unary_unary(
                '/feast.registry.RegistryServer/Refresh',
                request_serializer=feast_dot_registry_dot_RegistryServer__pb2.RefreshRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.Proto = channel.unary_unary(
                '/feast.registry.RegistryServer/Proto',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=feast_dot_core_dot_Registry__pb2.Registry.FromString,
                _registered_method=True)


class RegistryServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetEntity(self, request, context):
        """Entity RPCs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListEntities(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDataSource(self, request, context):
        """DataSource RPCs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDataSources(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFeatureView(self, request, context):
        """FeatureView RPCs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListFeatureViews(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStreamFeatureView(self, request, context):
        """StreamFeatureView RPCs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListStreamFeatureViews(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOnDemandFeatureView(self, request, context):
        """OnDemandFeatureView RPCs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListOnDemandFeatureViews(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFeatureService(self, request, context):
        """FeatureService RPCs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListFeatureServices(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSavedDataset(self, request, context):
        """SavedDataset RPCs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSavedDatasets(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetValidationReference(self, request, context):
        """ValidationReference RPCs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListValidationReferences(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListProjectMetadata(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInfra(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Refresh(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Proto(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RegistryServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEntity,
                    request_deserializer=feast_dot_registry_dot_RegistryServer__pb2.GetEntityRequest.FromString,
                    response_serializer=feast_dot_core_dot_Entity__pb2.Entity.SerializeToString,
            ),
            'ListEntities': grpc.unary_unary_rpc_method_handler(
                    servicer.ListEntities,
                    request_deserializer=feast_dot_registry_dot_RegistryServer__pb2.ListEntitiesRequest.FromString,
                    response_serializer=feast_dot_registry_dot_RegistryServer__pb2.ListEntitiesResponse.SerializeToString,
            ),
            'GetDataSource': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDataSource,
                    request_deserializer=feast_dot_registry_dot_RegistryServer__pb2.GetDataSourceRequest.FromString,
                    response_serializer=feast_dot_core_dot_DataSource__pb2.DataSource.SerializeToString,
            ),
            'ListDataSources': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDataSources,
                    request_deserializer=feast_dot_registry_dot_RegistryServer__pb2.ListDataSourcesRequest.FromString,
                    response_serializer=feast_dot_registry_dot_RegistryServer__pb2.ListDataSourcesResponse.SerializeToString,
            ),
            'GetFeatureView': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFeatureView,
                    request_deserializer=feast_dot_registry_dot_RegistryServer__pb2.GetFeatureViewRequest.FromString,
                    response_serializer=feast_dot_core_dot_FeatureView__pb2.FeatureView.SerializeToString,
            ),
            'ListFeatureViews': grpc.unary_unary_rpc_method_handler(
                    servicer.ListFeatureViews,
                    request_deserializer=feast_dot_registry_dot_RegistryServer__pb2.ListFeatureViewsRequest.FromString,
                    response_serializer=feast_dot_registry_dot_RegistryServer__pb2.ListFeatureViewsResponse.SerializeToString,
            ),
            'GetStreamFeatureView': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStreamFeatureView,
                    request_deserializer=feast_dot_registry_dot_RegistryServer__pb2.GetStreamFeatureViewRequest.FromString,
                    response_serializer=feast_dot_core_dot_StreamFeatureView__pb2.StreamFeatureView.SerializeToString,
            ),
            'ListStreamFeatureViews': grpc.unary_unary_rpc_method_handler(
                    servicer.ListStreamFeatureViews,
                    request_deserializer=feast_dot_registry_dot_RegistryServer__pb2.ListStreamFeatureViewsRequest.FromString,
                    response_serializer=feast_dot_registry_dot_RegistryServer__pb2.ListStreamFeatureViewsResponse.SerializeToString,
            ),
            'GetOnDemandFeatureView': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOnDemandFeatureView,
                    request_deserializer=feast_dot_registry_dot_RegistryServer__pb2.GetOnDemandFeatureViewRequest.FromString,
                    response_serializer=feast_dot_core_dot_OnDemandFeatureView__pb2.OnDemandFeatureView.SerializeToString,
            ),
            'ListOnDemandFeatureViews': grpc.unary_unary_rpc_method_handler(
                    servicer.ListOnDemandFeatureViews,
                    request_deserializer=feast_dot_registry_dot_RegistryServer__pb2.ListOnDemandFeatureViewsRequest.FromString,
                    response_serializer=feast_dot_registry_dot_RegistryServer__pb2.ListOnDemandFeatureViewsResponse.SerializeToString,
            ),
            'GetFeatureService': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFeatureService,
                    request_deserializer=feast_dot_registry_dot_RegistryServer__pb2.GetFeatureServiceRequest.FromString,
                    response_serializer=feast_dot_core_dot_FeatureService__pb2.FeatureService.SerializeToString,
            ),
            'ListFeatureServices': grpc.unary_unary_rpc_method_handler(
                    servicer.ListFeatureServices,
                    request_deserializer=feast_dot_registry_dot_RegistryServer__pb2.ListFeatureServicesRequest.FromString,
                    response_serializer=feast_dot_registry_dot_RegistryServer__pb2.ListFeatureServicesResponse.SerializeToString,
            ),
            'GetSavedDataset': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSavedDataset,
                    request_deserializer=feast_dot_registry_dot_RegistryServer__pb2.GetSavedDatasetRequest.FromString,
                    response_serializer=feast_dot_core_dot_SavedDataset__pb2.SavedDataset.SerializeToString,
            ),
            'ListSavedDatasets': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSavedDatasets,
                    request_deserializer=feast_dot_registry_dot_RegistryServer__pb2.ListSavedDatasetsRequest.FromString,
                    response_serializer=feast_dot_registry_dot_RegistryServer__pb2.ListSavedDatasetsResponse.SerializeToString,
            ),
            'GetValidationReference': grpc.unary_unary_rpc_method_handler(
                    servicer.GetValidationReference,
                    request_deserializer=feast_dot_registry_dot_RegistryServer__pb2.GetValidationReferenceRequest.FromString,
                    response_serializer=feast_dot_core_dot_ValidationProfile__pb2.ValidationReference.SerializeToString,
            ),
            'ListValidationReferences': grpc.unary_unary_rpc_method_handler(
                    servicer.ListValidationReferences,
                    request_deserializer=feast_dot_registry_dot_RegistryServer__pb2.ListValidationReferencesRequest.FromString,
                    response_serializer=feast_dot_registry_dot_RegistryServer__pb2.ListValidationReferencesResponse.SerializeToString,
            ),
            'ListProjectMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.ListProjectMetadata,
                    request_deserializer=feast_dot_registry_dot_RegistryServer__pb2.ListProjectMetadataRequest.FromString,
                    response_serializer=feast_dot_registry_dot_RegistryServer__pb2.ListProjectMetadataResponse.SerializeToString,
            ),
            'GetInfra': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInfra,
                    request_deserializer=feast_dot_registry_dot_RegistryServer__pb2.GetInfraRequest.FromString,
                    response_serializer=feast_dot_core_dot_InfraObject__pb2.Infra.SerializeToString,
            ),
            'Refresh': grpc.unary_unary_rpc_method_handler(
                    servicer.Refresh,
                    request_deserializer=feast_dot_registry_dot_RegistryServer__pb2.RefreshRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Proto': grpc.unary_unary_rpc_method_handler(
                    servicer.Proto,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=feast_dot_core_dot_Registry__pb2.Registry.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'feast.registry.RegistryServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('feast.registry.RegistryServer', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class RegistryServer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/feast.registry.RegistryServer/GetEntity',
            feast_dot_registry_dot_RegistryServer__pb2.GetEntityRequest.SerializeToString,
            feast_dot_core_dot_Entity__pb2.Entity.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListEntities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/feast.registry.RegistryServer/ListEntities',
            feast_dot_registry_dot_RegistryServer__pb2.ListEntitiesRequest.SerializeToString,
            feast_dot_registry_dot_RegistryServer__pb2.ListEntitiesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDataSource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/feast.registry.RegistryServer/GetDataSource',
            feast_dot_registry_dot_RegistryServer__pb2.GetDataSourceRequest.SerializeToString,
            feast_dot_core_dot_DataSource__pb2.DataSource.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListDataSources(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/feast.registry.RegistryServer/ListDataSources',
            feast_dot_registry_dot_RegistryServer__pb2.ListDataSourcesRequest.SerializeToString,
            feast_dot_registry_dot_RegistryServer__pb2.ListDataSourcesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetFeatureView(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/feast.registry.RegistryServer/GetFeatureView',
            feast_dot_registry_dot_RegistryServer__pb2.GetFeatureViewRequest.SerializeToString,
            feast_dot_core_dot_FeatureView__pb2.FeatureView.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListFeatureViews(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/feast.registry.RegistryServer/ListFeatureViews',
            feast_dot_registry_dot_RegistryServer__pb2.ListFeatureViewsRequest.SerializeToString,
            feast_dot_registry_dot_RegistryServer__pb2.ListFeatureViewsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStreamFeatureView(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/feast.registry.RegistryServer/GetStreamFeatureView',
            feast_dot_registry_dot_RegistryServer__pb2.GetStreamFeatureViewRequest.SerializeToString,
            feast_dot_core_dot_StreamFeatureView__pb2.StreamFeatureView.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListStreamFeatureViews(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/feast.registry.RegistryServer/ListStreamFeatureViews',
            feast_dot_registry_dot_RegistryServer__pb2.ListStreamFeatureViewsRequest.SerializeToString,
            feast_dot_registry_dot_RegistryServer__pb2.ListStreamFeatureViewsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetOnDemandFeatureView(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/feast.registry.RegistryServer/GetOnDemandFeatureView',
            feast_dot_registry_dot_RegistryServer__pb2.GetOnDemandFeatureViewRequest.SerializeToString,
            feast_dot_core_dot_OnDemandFeatureView__pb2.OnDemandFeatureView.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListOnDemandFeatureViews(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/feast.registry.RegistryServer/ListOnDemandFeatureViews',
            feast_dot_registry_dot_RegistryServer__pb2.ListOnDemandFeatureViewsRequest.SerializeToString,
            feast_dot_registry_dot_RegistryServer__pb2.ListOnDemandFeatureViewsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetFeatureService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/feast.registry.RegistryServer/GetFeatureService',
            feast_dot_registry_dot_RegistryServer__pb2.GetFeatureServiceRequest.SerializeToString,
            feast_dot_core_dot_FeatureService__pb2.FeatureService.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListFeatureServices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/feast.registry.RegistryServer/ListFeatureServices',
            feast_dot_registry_dot_RegistryServer__pb2.ListFeatureServicesRequest.SerializeToString,
            feast_dot_registry_dot_RegistryServer__pb2.ListFeatureServicesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSavedDataset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/feast.registry.RegistryServer/GetSavedDataset',
            feast_dot_registry_dot_RegistryServer__pb2.GetSavedDatasetRequest.SerializeToString,
            feast_dot_core_dot_SavedDataset__pb2.SavedDataset.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListSavedDatasets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/feast.registry.RegistryServer/ListSavedDatasets',
            feast_dot_registry_dot_RegistryServer__pb2.ListSavedDatasetsRequest.SerializeToString,
            feast_dot_registry_dot_RegistryServer__pb2.ListSavedDatasetsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetValidationReference(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/feast.registry.RegistryServer/GetValidationReference',
            feast_dot_registry_dot_RegistryServer__pb2.GetValidationReferenceRequest.SerializeToString,
            feast_dot_core_dot_ValidationProfile__pb2.ValidationReference.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListValidationReferences(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/feast.registry.RegistryServer/ListValidationReferences',
            feast_dot_registry_dot_RegistryServer__pb2.ListValidationReferencesRequest.SerializeToString,
            feast_dot_registry_dot_RegistryServer__pb2.ListValidationReferencesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListProjectMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/feast.registry.RegistryServer/ListProjectMetadata',
            feast_dot_registry_dot_RegistryServer__pb2.ListProjectMetadataRequest.SerializeToString,
            feast_dot_registry_dot_RegistryServer__pb2.ListProjectMetadataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetInfra(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/feast.registry.RegistryServer/GetInfra',
            feast_dot_registry_dot_RegistryServer__pb2.GetInfraRequest.SerializeToString,
            feast_dot_core_dot_InfraObject__pb2.Infra.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Refresh(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/feast.registry.RegistryServer/Refresh',
            feast_dot_registry_dot_RegistryServer__pb2.RefreshRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Proto(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/feast.registry.RegistryServer/Proto',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            feast_dot_core_dot_Registry__pb2.Registry.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
