"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import feast.core.DataSource_pb2
import feast.core.Feature_pb2
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class FeatureView(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SPEC_FIELD_NUMBER: builtins.int
    META_FIELD_NUMBER: builtins.int
    @property
    def spec(self) -> global___FeatureViewSpec:
        """User-specified specifications of this feature view."""
        pass
    @property
    def meta(self) -> global___FeatureViewMeta:
        """System-populated metadata for this feature view."""
        pass
    def __init__(self,
        *,
        spec : typing.Optional[global___FeatureViewSpec] = ...,
        meta : typing.Optional[global___FeatureViewMeta] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["meta",b"meta","spec",b"spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["meta",b"meta","spec",b"spec"]) -> None: ...
global___FeatureView = FeatureView

class FeatureViewSpec(google.protobuf.message.Message):
    """Next available id: 13
    TODO(adchia): refactor common fields from this and ODFV into separate metadata proto
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ENTITIES_FIELD_NUMBER: builtins.int
    FEATURES_FIELD_NUMBER: builtins.int
    ENTITY_COLUMNS_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    OWNER_FIELD_NUMBER: builtins.int
    TTL_FIELD_NUMBER: builtins.int
    BATCH_SOURCE_FIELD_NUMBER: builtins.int
    STREAM_SOURCE_FIELD_NUMBER: builtins.int
    ONLINE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Name of the feature view. Must be unique. Not updated."""

    project: typing.Text = ...
    """Name of Feast project that this feature view belongs to."""

    @property
    def entities(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of names of entities associated with this feature view."""
        pass
    @property
    def features(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[feast.core.Feature_pb2.FeatureSpecV2]:
        """List of specifications for each feature defined as part of this feature view."""
        pass
    @property
    def entity_columns(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[feast.core.Feature_pb2.FeatureSpecV2]:
        """List of specifications for each entity defined as part of this feature view."""
        pass
    description: typing.Text = ...
    """Description of the feature view."""

    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """User defined metadata"""
        pass
    owner: typing.Text = ...
    """Owner of the feature view."""

    @property
    def ttl(self) -> google.protobuf.duration_pb2.Duration:
        """Features in this feature view can only be retrieved from online serving
        younger than ttl. Ttl is measured as the duration of time between
        the feature's event timestamp and when the feature is retrieved
        Feature values outside ttl will be returned as unset values and indicated to end user
        """
        pass
    @property
    def batch_source(self) -> feast.core.DataSource_pb2.DataSource:
        """Batch/Offline DataSource where this view can retrieve offline feature data."""
        pass
    @property
    def stream_source(self) -> feast.core.DataSource_pb2.DataSource:
        """Streaming DataSource from where this view can consume "online" feature data."""
        pass
    online: builtins.bool = ...
    """Whether these features should be served online or not"""

    def __init__(self,
        *,
        name : typing.Text = ...,
        project : typing.Text = ...,
        entities : typing.Optional[typing.Iterable[typing.Text]] = ...,
        features : typing.Optional[typing.Iterable[feast.core.Feature_pb2.FeatureSpecV2]] = ...,
        entity_columns : typing.Optional[typing.Iterable[feast.core.Feature_pb2.FeatureSpecV2]] = ...,
        description : typing.Text = ...,
        tags : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        owner : typing.Text = ...,
        ttl : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        batch_source : typing.Optional[feast.core.DataSource_pb2.DataSource] = ...,
        stream_source : typing.Optional[feast.core.DataSource_pb2.DataSource] = ...,
        online : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["batch_source",b"batch_source","stream_source",b"stream_source","ttl",b"ttl"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["batch_source",b"batch_source","description",b"description","entities",b"entities","entity_columns",b"entity_columns","features",b"features","name",b"name","online",b"online","owner",b"owner","project",b"project","stream_source",b"stream_source","tags",b"tags","ttl",b"ttl"]) -> None: ...
global___FeatureViewSpec = FeatureViewSpec

class FeatureViewMeta(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CREATED_TIMESTAMP_FIELD_NUMBER: builtins.int
    LAST_UPDATED_TIMESTAMP_FIELD_NUMBER: builtins.int
    MATERIALIZATION_INTERVALS_FIELD_NUMBER: builtins.int
    @property
    def created_timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time where this Feature View is created"""
        pass
    @property
    def last_updated_timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time where this Feature View is last updated"""
        pass
    @property
    def materialization_intervals(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MaterializationInterval]:
        """List of pairs (start_time, end_time) for which this feature view has been materialized."""
        pass
    def __init__(self,
        *,
        created_timestamp : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        last_updated_timestamp : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        materialization_intervals : typing.Optional[typing.Iterable[global___MaterializationInterval]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["created_timestamp",b"created_timestamp","last_updated_timestamp",b"last_updated_timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["created_timestamp",b"created_timestamp","last_updated_timestamp",b"last_updated_timestamp","materialization_intervals",b"materialization_intervals"]) -> None: ...
global___FeatureViewMeta = FeatureViewMeta

class MaterializationInterval(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    START_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(self,
        *,
        start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["end_time",b"end_time","start_time",b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["end_time",b"end_time","start_time",b"start_time"]) -> None: ...
global___MaterializationInterval = MaterializationInterval
